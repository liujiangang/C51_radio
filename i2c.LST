C51 COMPILER V9.01   I2C                                                                   05/15/2017 03:35:25 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN i2c.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE i2c.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "i2c.h"
   2          #include "intrins.h"
   3          
   4          /*******************************************************************************
   5          * 函 数 名         : I2C_Start()
   6          * 函数功能                 : 起始信号：在I2C_SCL时钟信号在高电平期间I2C_SDA信号产生一个下降沿
   7          * 输    入         : 无
   8          * 输    出         : 无
   9          * 备    注         : 起始之后I2C_SDA和I2C_SCL都为0
  10          *******************************************************************************/
  11          
  12          void I2C_Start()
  13          {
  14   1              I2C_SDA = 1;
  15   1              _nop_();
  16   1              I2C_SCL = 1;
  17   1              _nop_();_nop_();_nop_();_nop_();_nop_();        //建立时间是I2C_SDA保持时间>4.7us
  18   1              I2C_SDA = 0;
  19   1              _nop_();_nop_();_nop_();_nop_();_nop_();        // 起始条件锁定时间>4μs
  20   1              I2C_SCL = 0;                    
  21   1              _nop_();_nop_();_nop_();_nop_();_nop_();        //建立时间是I2C_SDA保持时间>4.7us               
  22   1      }
  23          /*******************************************************************************
  24          * 函 数 名           : I2C_Stop()
  25          * 函数功能               : 终止信号：在I2C_SCL时钟信号高电平期间I2C_SDA信号产生一个上升沿
  26          * 输    入           : 无
  27          * 输    出               : 无
  28          * 备    注           : 结束之后保持I2C_SDA和I2C_SCL都为1；表示总线空闲
  29          *******************************************************************************/
  30          
  31          void I2C_Stop()
  32          {
  33   1              I2C_SDA = 0;
  34   1              _nop_();
  35   1              I2C_SCL = 1;
  36   1              _nop_();_nop_();_nop_();_nop_();_nop_();        //建立时间是I2C_SDA保持时间>4us
  37   1              I2C_SDA = 1;
  38   1              _nop_();_nop_();_nop_();_nop_();_nop_();        // 起始条件锁定时间>4.7μs              
  39   1      }
  40          /*******************************************************************************
  41          * 函 数 名           : I2cSendByte(uchar num)
  42          * 函数功能               : 通过I2C发送一个字节。在I2C_SCL时钟信号高电平期间，
  43          *                    * 保持发送信号I2C_SDA保持稳定
  44          * 输    入           : num ,ack
  45          * 输    出               : 0或1。发送成功返回1，发送失败返回0
  46          * 备    注           : 发送完一个字节I2C_SCL=0, 需要应答则应答设置为1，否则为0
  47          *******************************************************************************/
  48          
  49          uchar I2C_SendByte(uchar dat, uchar ack)
  50          {
  51   1              uchar a = 0,b = 0;//最大255，一个机器周期为1us，最大延时255us。
  52   1                              
  53   1              for(a=0; a<8; a++)//要发送8位，从最高位开始
  54   1              {
  55   2                      I2C_SCL = 0;            //时钟信号为低电平时，数据信号才可以变化
C51 COMPILER V9.01   I2C                                                                   05/15/2017 03:35:25 PAGE 2   

  56   2                      _nop_();
  57   2      
  58   2                      I2C_SDA = dat >> 7;      
  59   2                      dat = dat << 1;
  60   2      
  61   2                      _nop_();
  62   2                      I2C_SCL = 1;
  63   2                      _nop_();_nop_();_nop_();_nop_();_nop_();        // 时钟信号为高电平时，数据信号保存不变且大于4us                
  64   2              }
  65   1      
  66   1              I2C_SCL = 0;
  67   1              _nop_();
  68   1              I2C_SDA = 1;
  69   1              _nop_();
  70   1              I2C_SCL = 1;
  71   1              while(I2C_SDA && (ack == 1))//等待应答，也就是等待从设备把I2C_SDA拉低
  72   1              {
  73   2                      b++;
  74   2                      if(b > 200)      //如果超过200us没有应答发送失败，或者为非应答，表示接收结束
  75   2                      {
  76   3                              I2C_SCL = 0;
  77   3                              _nop_();
  78   3                              return 0;
  79   3                      }
  80   2              }
  81   1              I2C_SCL = 0;
  82   1              _nop_();
  83   1              return 1;               
  84   1      }
  85          /*******************************************************************************
  86          * 函 数 名           : I2cReadByte()
  87          * 函数功能               : 使用I2c读取一个字节
  88          * 输    入           : 无
  89          * 输    出               : dat
  90          * 备    注           : 接收完一个字节I2C_SCL=0
  91          *******************************************************************************/
  92          uchar I2C_ReadByte()
  93          {
  94   1              uchar a = 0,dat = 0;
  95   1              I2C_SDA = 1;                    //起始和发送一个字节之后I2C_SCL是0
  96   1              _nop_();
  97   1              for(a=0; a<8; a++)//接收8个字节
  98   1              {
  99   2                      I2C_SCL = 0;    
 100   2                      _nop_();_nop_();        //从机在主机把时钟信号变为低电平时改变数据信号
 101   2                      I2C_SCL = 1;
 102   2      
 103   2                      _nop_();_nop_();        //从机在主机把时钟信号维持在高电平的状态下保存数据信号不变，这时主机读取数据信号
 104   2      
 105   2                      dat <<= 1;
 106   2                      dat |= I2C_SDA;
 107   2              }
 108   1              return dat;             
 109   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    140    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.01   I2C                                                                   05/15/2017 03:35:25 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
